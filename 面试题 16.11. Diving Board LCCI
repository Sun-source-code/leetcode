# leetcode

题目描述（简单）
============

你正在使用一堆木板建造跳水板。有两种类型的木板，其中长度较短的木板长度为shorter，长度较长的木板长度为longer。
你必须正好使用k块木板。编写一个方法，生成跳水板所有可能的长度。
返回的长度需要从小到大排列。
示例：输入：
shorter = 1
longer = 2
k = 3
输出： {3,4,5,6}

解法一：数学方法（数学归纳法）

长木板块数为i，则短木板块数为k-i，总长度为shorter*(k-i)+longer*i
注意特殊情况，k=0和shorter=longer

```java
public int[] divingBoard(int shorter,int longer,int k){
  if(k == 0) return new int[0];
  if(shorter == longer) return new int[]{shorter*k};
  int [] ans = new int[k+1];
  for(int i = 0;i < k+1;i++){
    ans[i] = shorter*(k-i) + longer*i;}
  return ans;}
```

总结：
====

直接总结归纳出几个参数之间的关系即可。
