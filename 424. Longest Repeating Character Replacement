# leetcode

题目描述（中等）
============

给你一个仅由大写英文字母组成的字符串，你可以将任意位置上的字符替换成另外的字符，总共可最多替换 k 次。
在执行上述操作后，找到包含重复字母的最长子串的长度。

注意：字符串长度 和 k 不会超过 104。

示例 1：

输入：s = "ABAB", k = 2
输出：4
解释：用两个'A'替换为两个'B',反之亦然。

解法一：双指针
============

枚举字符串的每一个字符作为右端点，找到最远的左端点距离，满足该区间除了出现最多的字符外，剩余字符个数不超过k。

```java
public int characterReplacement(String s, int k) {
    int [] num = new int[26];
    int max = 0;
    int left = 0,right = 0;
    while(right < s.length()){
        nums[s.charAt(right) - 'A']++;
        max = Math.max(max,nums[s.charAt(right)]);
        if(right - left + 1 - max > k){
            nums[s.charAt(left) - 'A']--;
            left++;}
        right++;}
    return right - left;}
```

总结：
====

刚开始我想到了动态规划，但是我只能判断前后两个字符是否相等，却不能判断具体是哪一个字符，后来我想到了滑动窗口，
但是因为思路不同，从前往后遍历，也无法找到最长子串，只能从后往前遍历才是最合适的方法。
