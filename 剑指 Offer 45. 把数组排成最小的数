# leetcode

题目描述（中等）
============

输入一个非负整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。

示例 1:

输入: [10,2]
输出: "102"

解法一：快速排序
=============

题目意思是将数组排序，排序过程中对比两个字符相加之和，是哪个字符在前比较小。

```java
class Solution {
    public String minNumber(int[] nums) {
        String[] strs = new String[nums.length];
        for(int i = 0;i < nums.length;i++){
            strs[i] = String.valueOf(nums[i]);}
        quickSort(strs,0,nums.length);
        StringBuilder sb = new StringBuilder();
        for(int i = 0;i < nums.length;i++){
            sb.append(strs[i]);}
        return sb.toString();}
    public void quickSort(String [] strs,int l,int r){
        if(r <= l) return;
        int i = l,j = r;
        String tmp = strs[i];
        while(i < j){
            while((strs[j] + strs[l]).compareTo(strs[l] + strs[j]) >= 0 && i < j) j--;
            while((strs[i] + strs[l]).compareTo(strs[l] + strs[i]) <= 0 && i < j) i++;
            tmp = strs[i];
            strs[i] = strs[j];
            strs[j] = tmp;}
        strs[i] = strs[l];
        strs[l] = tmp;
        quickSort(strs,l,i-1);
        quickSort(strs,i+1,r);}}
```

解法二：内置函数
==============

```java
class Solution {
    public String minNumber(int[] nums) {
        String [] strs = new String[nums.length];
        for(int i = 0; i < nums.length; i++)
            strs[i] = String.valueOf(nums[i]);
        Arrays.sort(strs,(x , y) -> (x + y).compareTo(y + x));
        StringBuilder res = new StringBuilder();
        for(String s : strs)
            res.append(s);
        return res.toString();}}
```

总结：
====

将数组中每个字符排序，但是这里的排序方式是x + y和y + x的对比。
