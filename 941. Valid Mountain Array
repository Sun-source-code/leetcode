# leetcode

题目描述（简单）
============

给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。

让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组：

A.length >= 3
在 0 < i < A.length - 1 条件下，存在 i 使得：
A[0] < A[1] < ... A[i-1] < A[i]
A[i] > A[i+1] > ... > A[A.length - 1]

示例：输入：[0,3,2,1]
输出：true

解法一：线性扫描
=============

```java
public boolean validMountainArray(int[] A) {
    int N = A.length;
    int i = 0;
    while (i + 1 < N && A[i] < A[i + 1]) {
        i++;}
    if (i == 0 || i == N - 1) {
        return false;}
    while (i + 1 < N && A[i] > A[i + 1]) {
        i++;}
    return i == N - 1;}
```

总结：
====

这题使用双重循环也可以得到结果，但是时间复杂度太高，其实只需要一次遍历，找到一个临界点就可以了，不需要将所有临界点计算一遍
