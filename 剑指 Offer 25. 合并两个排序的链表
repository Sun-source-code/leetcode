# leetcode

题目描述（简单）
============

输入两个递增排序的链表，合并这两个链表并使新链表中的节点仍然是递增排序的。

示例1：
输入：1->2->4, 1->3->4
输出：1->1->2->3->4->4

解法一：双指针
============

```java
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0),curr = dummy;
        while(l1 != null && l2 != null){
            if(l1.val < l2.val){
                curr.next = l1;
                l1 = l1.next;}
            else{
                curr.next = l2;
                l2 = l2.next;}
            curr = curr.next;}
        curr.next = l1 != null ? l1 : l2;
        return dummy.next;}}
```

解法二：递归
==========

```java
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null || l2 == null){
            return l1 == null ? l2 : l1;}
        if(l1.val < l2.val){
            l1.next = mergeTwoLists(l1.next,l2);
            return l1;}
        else{
            l2.next = mergeTwoLists(l1,l2.next);
            return l2;}}
```

总结：
====

较为朴素的做法是双指针，反而是递归写法不太容易。
