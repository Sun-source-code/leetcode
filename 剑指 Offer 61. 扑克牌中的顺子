# leetcode

题目描述（简单）
=============

从扑克牌中随机抽5张牌，判断是不是一个顺子，即这5张牌是不是连续的。
2～10为数字本身，A为1，J为11，Q为12，K为13，而大、小王为 0 ，可以看成任意数字。A 不能视为 14。

示例 1:
输入: [1,2,3,4,5]
输出: True

示例 2:
输入: [0,0,1,2,5]
输出: True

解法一：Set集合+遍历
==================
```java
class Solution {
    public boolean isStraight(int[] nums) {
        Set<Integer> repeat = new HashSet<>();
        int min = 0,max = 14;
        for(int num : nums) {
            if(num == 0) continue;
            max = Math.max(num,max);
            min = Math.min(num,min);
            if(repeat.contains(num)) return false;
            repeat.add(num);}
        return max - min < 5;}}
```

解法二：排序+遍历
===============

```java
class Solution {
    public boolean isStraight(int[] nums) {
        int joker = 0;
        Arrays.sort(nums);
        for(int i = 0;i < 4;i++){
            if(nums[i] == 0) joker++;
            else if(nums[i] == nums[i+1]) return false;}
        return nums[4] - nums[joker] < 5;}}
```

总结：
====

大小王可以表示任何数字，所以只要排查五个数字的最大值和最小值是否在5以内。
