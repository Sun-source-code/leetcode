# leetcode

题目描述（简单）
============

给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。

在杨辉三角中，每个数是它左上方和右上方的数的和。

示例:

输入: 5
输出:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

解法一：数学
==========

```java
public List<List<Integer>> generate(int numRows) {
    //所有行的集合
    List<List<Integer>> ans = new ArrayList<List<Integer>>();
    for (int i = 0; i < numRows; ++i) {
        //第i行的数字
        List<Integer> row = new ArrayList<Integer>();
        for (int j = 0; j <= i; ++j) {
            if (j == 0 || j == i) {
                row.add(1);
            } else {
                row.add(ans.get(i - 1).get(j - 1) + ans.get(i - 1).get(j));}}
        ans.add(row);}
    return ans;}
```

总结：
====

简单题，类似动态规划的处理步骤。

