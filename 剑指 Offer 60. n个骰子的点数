# leetcode

题目描述（中等）
=============

把n个骰子扔在地上，所有骰子朝上一面的点数之和为s。输入n，打印出s的所有可能的值出现的概率。

你需要用一个浮点数数组返回答案，其中第 i 个元素代表这 n 个骰子所能掷出的点数集合中第 i 小的那个的概率。

示例 1:

输入: 1
输出: [0.16667,0.16667,0.16667,0.16667,0.16667,0.16667]

解法一：动态规划
==============

```java
class Solution {
    public double[] dicesProbability(int n) {
        double [] pre = {1/6d,1/6d,1/6d,1/6d,1/6d,1/6d};
        for(int i = 2;i <= n;i++){
            double tmp[]=new double[5*i+1];
            for(int j = 0;j < pre.length;j++){
                for(int k = 1;k <= 6;k++){
                    tmp[j+k] += pre[j] / 6;}}
            pre = tmp;}
        return pre;}}
```

总结：
====

动态规划还是那么厉害，这里大致意思是，每一次多一个骰子，都用前面少一个的结果来计算，计算方式是除以6。
