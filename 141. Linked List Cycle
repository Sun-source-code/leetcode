# leetcode

题目描述（简单）
============

给定一个链表，判断链表中是否有环。
为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 
如果 pos 是 -1，则在该链表中没有环。

示例 ：
输入：head = [3,2,0,-4], pos = 1
输出：true
解释：链表中有一个环，其尾部连接到第二个节点。

解法一：哈希表
============

```java
public boolean hasCycle(ListNode head) {
    Set<ListNode> nodesSeen = new HashSet<>();
    while (head != null) {
        if (nodesSeen.contains(head)) {
            return true;
        } else {
            nodesSeen.add(head);
        }
        head = head.next;}
    return false;}
```

解法二：快慢指针
=============

```java
public boolean hasCycle(ListNode head) {
    if (head == null || head.next == null) {
        return false;}
    ListNode slow = head;
    ListNode fast = head.next;
    while (slow != fast) {
        if (fast == null || fast.next == null) {
            return false;}
        slow = slow.next;
        fast = fast.next.next;}
    return true;}
```

总结：
====

哈希表是比较容易想到的方法，快慢指针使用龟兔赛跑的思路来判断环状，思路值得学习
