# leetcode

题目描述（简单）
=============

给定两个句子 A 和 B 。 （句子是一串由空格分隔的单词。每个单词仅由小写字母组成。）
如果一个单词在其中一个句子中只出现一次，在另一个句子中却没有出现，那么这个单词就是不常见的。
返回所有不常用单词的列表。
您可以按任何顺序返回列表。

示例 ：
输入：A = "this apple is sweet", B = "this apple is sour"
输出：["sweet","sour"]

解法一：哈希表
============

将所有的字符串放进哈希表，只出现一次的字符串满足题意

```java
public String[] uncommonFromSentences(String A, String B) {
    Map<String,Integer> map = new HashMap<>();
    for(String s : A.split(" ")){
        int count = map.getOrDefault(s,0)+1;
        map.put(s,count);}
    for(String s : B.split(" ")){
        int count = map.getOrDefault(s,0)+1;
        map.put(s,count);}
    List<String> ans = new ArrayList<>();
    for(String word : map.keySet()){
        if(map.get(word) == 1){
            ans.add(word);}}
    return ans.toArray(new String[ans.size()]);}
```

总结：
====

一个哈希表即可解决，注意链表转数组的方法。
