# leetcode

题目描述（简单）
============

给出由小写字母组成的字符串 S，重复项删除操作会选择两个相邻且相同的字母，并删除它们。

在 S 上反复执行重复项删除操作，直到无法继续删除。

在完成所有重复项删除操作后返回最终的字符串。答案保证唯一。

示例：

输入："abbaca"
输出："ca"
解释：例如，在 "abbaca" 中，我们可以删除 "bb" 由于两字母相邻且相同，这是此时唯一可以执行删除操作的重复项。
之后我们得到字符串 "aaca"，其中又只有 "aa" 可以执行重复项删除操作，所以最后的字符串为 "ca"。

解法一：栈
========

只对比相邻的字符，则需要对比非常多轮，这是需要结合栈的特点，对比隔开的字符是否相等。

```java
class Solution {
    public String removeDuplicates(String S) {
        StringBuffer sb = new StringBuffer();
        int top = -1;
        for(int i = 0;i < S.length();i++){
            char ch = S.charAt(i);
            if(top >= 0 && sb.charAt(i) == ch){
                sb.deletecharAt(top);
                --top;}
            else{
                sb.append(ch);
                ++top;}}
        return sb.toString();}}
```

总结：
====

使用栈存储相邻可能不同的字符，判断栈中相邻字符是否相等，思路简单，不过注意不一定需要栈，使用栈的思想即可。
