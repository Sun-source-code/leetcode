# leetcode

题目描述（简单）
=============

魔术索引。 在数组A[0...n-1]中，有所谓的魔术索引，满足条件A[i] = i。
给定一个有序整数数组，编写一种方法找出魔术索引，若有的话，在数组A中找出一个魔术索引，
如果没有，则返回-1。若有多个魔术索引，返回索引值最小的一个。

示例：
 输入：nums = [0, 2, 3, 4, 5]
 输出：0
 说明: 0下标的元素为0

解法一：暴力遍历
=============

```java
public int findMagicIndex(int[] nums) {
    for(int i = 0;i < nums.length;i++){
        if(nums[i] == i) return i;}
    return -1;}
```

解法二：二分查找
=============

```java
public int findMagicIndex(int[] nums) {
    return getAnswer(nums,0,nums.length-1);}
public int getAnswer(int [] nums,int left,int right){
    if(left > right){
        return -1;}
    int mid = left + (right - left) / 2;
    int leftAnswer = getAnswer(nums,left,mid-1);
    if(leftAnswer != -1){
        return leftAnswer;
    }else if(nums[mid] == mid){
        return mid;}
    return getAnswer(nums,mid+1,right);}
```

解法三：暴力法优化
===============

```java
public int findMagicIndex(int[] nums) {
    int flag = 0;
    while(flag < nums.length){
        if(nums[flag] == flag){
            return flag;}
        else if(nums[flag] > flag){
            flag = nums[flag];}
        else{
            flag++;}}
    return -1;}
```

总结：
====

题目很简单，需要注意解法三，跨越不需要的元素，很巧妙。
