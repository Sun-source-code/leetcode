# leetcode

题目描述（中等）
=============

给你二叉树的根节点 root 和一个整数目标和 targetSum ，找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径。

叶子节点 是指没有子节点的节点。

示例 1：

输入：root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22
输出：[[5,4,11,2],[5,8,4,5]]

解法一：深度优先遍历
=================

```Java
class Solution {
    List<List<Integer>> ans = new LinkedList<>();
    Deque<Integer> path = new LinkedList<>();
    public List<List<Integer>> pathSum(TreeNode root, int target) {
        dfs(root, target);
        return ans;}
    public void dfs(TreeNode root, int target) {
        if(root == null) {
            return;}
        path.offerLast(root.val);
        target -= root.val;
        if(root.left == null && root.right == null && target == 0) {
            ans.add(new LinkedList<Integer>(path));}
        dfs(root.left, target);
        dfs(root.right, target);
        path.pollLast();}}
```

总结：
====

注意最后path清空。
