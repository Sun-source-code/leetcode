# leetcode

题目描述（中等）
=============

给定一个由若干 0 和 1 组成的数组 A，我们最多可以将 K 个值从 0 变成 1 。

返回仅包含 1 的最长（连续）子数组的长度。

示例 1：

输入：A = [1,1,1,0,0,0,1,1,1,1,0], K = 2
输出：6
解释： 
[1,1,1,0,0,1,1,1,1,1,1]
粗体数字从 0 翻转到 1，最长的子数组长度为 6。

解法一：滑动窗口
==============

```java
class Solution {
    public int longestOnes(int[] A, int K) {
        //定义左右节点，结果和初始长度
        int left = 0,right = 0,ans = 0,count = 0;
        while(right < A.length){
            if(A[right++] == 0){
                count++;}
            while(count > K){
                if(A[left++] == 0){
                    count--;}}
            ans = Math.max(ans,right - left);}
        return ans;}}
```

解法二
======

```java
class Solution {
    public int longestOnes(int[] A, int K) {
        int res = 0, i = 0, j = 0;
		for (; i < A.length; i++) {
			if (A[i] == 0) {
				if (K > 0) {
					K--;
				} else {
					res = Math.max(res, i - j);
					while (A[j++] == 1);
				}
			}
		}
		return Math.max(res, i - j);}}
```

总结：
====

这题的滑动窗口实在巧妙，虽然思路上没有什么特别的，但是要把代码写漂亮还是很不容易的。
