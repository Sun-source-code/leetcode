# leetcode

题目描述（困难）
=============

给定一个未排序的整数数组，找出最长连续序列的长度。
要求算法的时间复杂度为 O(n)。
示例：输入: [100, 4, 200, 1, 3, 2]
输出: 4
解释: 最长连续序列是 [1, 2, 3, 4]。它的长度为 4。

解法一：排序
==========

1. 排除数组为空的情况
2. 先对数组进行排序
3. 遍历数组，数组递增时ans++，不递增时ans=1，不断更新ans的值，注意当两个元素的值相等的情况

```java
public int longestConsecutive(int[] nums){
  if(nums.length == 0 || nums == null) return 0;
  int ans = 1,max = 1;
  for(int i = 1;i < nums.length;i++){
    if(nums[i] != nums[i-1]){
      if(nums[i-1] + 1 = nums[i]){
        ans++;}
      else{
        max = Math.max(max,ans);
        ans = 1;}}}
  return Math.max(max,ans);}
```

解法二：哈希表
============

考虑枚举数组中的每个数x，考虑以其为起点，不断尝试匹配x+1,x+2……是否存在

```java
public int longestConsecutive(int[] nums){
  Set<Integer> num_set = new HashSet<>();
  for(int num : nums){
    num_set.add(num);}
  int max = 0;
  for(int num : num_set){
    if(!nums_set.contains(num-1)){
      int cur = num;
      int streak = 1;
      while(nums_set.contains(cur+1)){
        cur += 1;
        streak += 1;}
      max = Math.max(max,steak);}}
  return max;}
```

总结：
====

方法思路都比较好理解，更新max时需要注意一下
