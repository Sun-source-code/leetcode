# leetcode

题目描述（简单）
=============

用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，
分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )

示例 1：

输入：
["CQueue","appendTail","deleteHead","deleteHead"]
[[],[3],[],[]]
输出：[null,null,3,-1]

解法一：双栈
==========

第一个栈存储插入操作，第二个栈存储删除操作，删除时，将第一个栈的元素弹出到第二个栈，得到的就是顺序的元素，输出栈顶元素即可。

```java
class CQueue{
    Deque<Integer> stack1;
    Deque<Integer> stack2;
    public CQueue(){
        stack1 = new LinkedList<>();
        stack2 = new LinkedList<>();}
    public void appendTail(int value){
        stack1.push(value);}
    public int deleteHead(){
        if(stack2.isEmpty()){
            while(!stack1.isEmpty()){
                stack2.push(stack1.pop());}}
        if(stack2.isEmpty()){
            return -1;}
        else{
            int deleteItem = stack2.pop();
            return deleteItem;}}}
```

总结：
====

使用两个栈来存储队列的思路很好理解，但是比较不适应的是这三个操作，删除操作并不是真正删除，而是返回需要删除的元素。
