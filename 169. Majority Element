# leetcode

题目描述（简单）
============

给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数大于 ⌊ n/2 ⌋ 的元素。

你可以假设数组是非空的，并且给定的数组总是存在多数元素。

示例 1:
输入: [3,2,3]
输出: 3

解法一：暴力使用哈希表
==================

```java
private Map<Integer, Integer> countNums(int[] nums) {
    Map<Integer, Integer> counts = new HashMap<Integer, Integer>();
    for (int num : nums) {
        if (!counts.containsKey(num)) {
            counts.put(num, 1);}
        else {
            counts.put(num, counts.get(num)+1);}}
    return counts;}

public int majorityElement(int[] nums) {
    Map<Integer, Integer> counts = countNums(nums);
    Map.Entry<Integer, Integer> majorityEntry = null;
    for (Map.Entry<Integer, Integer> entry : counts.entrySet()) {
        if (majorityEntry == null || entry.getValue() > majorityEntry.getValue()) {
            majorityEntry = entry;}}
    return majorityEntry.getKey();}
```

解法二：排序
==========

```
public int majorityElement(int[] nums) {
    Arrays.sort(nums);
    return nums[nums.length/2];}
```

解法三：分治
==========

```java
private int countInRange(int[] nums, int num, int lo, int hi) {
    int count = 0;
    for (int i = lo; i <= hi; i++) {
        if (nums[i] == num) {
            count++;}}
    return count;}

private int majorityElementRec(int[] nums, int lo, int hi) {
    if (lo == hi) {
        return nums[lo];}
    int mid = (hi-lo)/2 + lo;
    int left = majorityElementRec(nums, lo, mid);
    int right = majorityElementRec(nums, mid+1, hi);
    if (left == right) {
        return left;}
    int leftCount = countInRange(nums, left, lo, hi);
    int rightCount = countInRange(nums, right, lo, hi);
    return leftCount > rightCount ? left : right;}

public int majorityElement(int[] nums) {
    return majorityElementRec(nums, 0, nums.length-1);}
```

解法四：投票算法
=============

```java
public int majorityElement(int[] nums) {
    int count = 0;
    Integer candidate = null;
    for(int num : nums){
        if(count == 0){
            candidate = num;}
        count += (num == candidate) ? 1 : -1;}
    return candidate;}
```

总结：
====

如果是面试中有这些问题，最好是后面三种都能说出来。
