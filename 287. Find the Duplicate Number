# leetcode

题目描述（中等）
============

给定一个包含 n + 1 个整数的数组 nums，其数字都在 1 到 n 之间（包括 1 和 n），
可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。

示例 :
输入: [1,3,4,2,2]
输出: 2

解法一：二分查找
=============

```java
public int findDuplicate(int[] nums) {
    int n = nums.length;
    int l = 1,r = n-1,ans = -1;
    while(l <= r){
        int mid = (l + r) >> 1;
        int cnt = 0;
        for(int i = 0;i < n;i++){
            if(nums[i] <= mid){
                cnt++;}}
        if(cnt <= mid){
            l = mid + 1;}
        else{
            r = mid - 1;
            ans = mid;}}
    return ans;}
```

解法二：快慢指针
=============

```java
public int findDuplicate(int[] nums) {
    int slow = 0, fast = 0;
    do {
        slow = nums[slow];
        fast = nums[nums[fast]];
    } while (slow != fast);
    slow = 0;
    while (slow != fast) {
        slow = nums[slow];
        fast = nums[fast];}
    return slow;}
```

总结：
====

我也就只能想出Set和排序的方法了，这里的两种方法都非常巧妙，特别是快慢指针，我都没有想到判断环形能和这题有关联，这题需要
同时看一下142题。
