# leetcode

题目描述（简单）
============

给你两个数组，arr1 和 arr2，

arr2 中的元素各不相同
arr2 中的每个元素都出现在 arr1 中
对 arr1 中的元素进行排序，使 arr1 中项的相对顺序和 arr2 中的相对顺序相同。
未在 arr2 中出现过的元素需要按照升序放在 arr1 的末尾。

示例：

输入：arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]
输出：[2,2,2,1,4,3,3,9,6,7,19]

解法一：计数排序
=============

要求是根据arr2的顺序，对arr1进行排序，未出现的排在后面，因为数字本身并不多，使用计数排序选择一个最大的数字组成桶

```java
public int[] relativeSortArray(int[] arr1, int[] arr2) {
    int upper = 0;
    for(int x : arr1){
        upper = Math.max(upper,x);}
    int [] frequency = new int[upper+1];
    for(int x : arr1){
        frequency[x]++;}
    int [] ans = new int[arr2.length];
    int index = 0;
    for(int x : arr2){
        for(int i = 0;i < frequency[x];i++){
            ans[index++] = x;}
        frequency[x] = 0;}
    for(int x = 0;x <= upper;x++){
        for(int i = 0;i < frequency[x];i++){
            ans[index++] = x;}}
    return ans;}
```

总结：
====

理解了题目要求就很好做了，计数排序的思路，将arr1的数装进各个桶中就可以了
