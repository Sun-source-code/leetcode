# leetcode

题目描述（简单）
============

给你一个正整数数组 arr，请你找出一个长度为 m 且在数组中至少重复 k 次的模式。

模式 是由一个或多个值组成的子数组（连续的子序列），连续 重复多次但 不重叠 。 模式由其长度和重复次数定义。

如果数组中存在至少重复 k 次且长度为 m 的模式，则返回 true ，否则返回  false 。

示例 1：
输入：arr = [1,2,4,4,4,4], m = 1, k = 3
输出：true
解释：模式 (4) 的长度为 1 ，且连续重复 4 次。注意，模式可以重复 k 次或更多次，但不能少于 k 次。

解法一：暴力匹配
=============

暴力匹配每一段连续子串，判断是否存在模式

```java
public boolean containsPattern(int[] arr, int m, int k) {
    for(int i = 0; i < arr.length; i++){
        for(int j = i; j < arr.length; j++){
            if(solve(arr, i, j, k, m)){
                return true;}}}
    return false;}
    
public boolean solve(int[] arr, int l, int r, int k, int m){
    int len = r - l + 1;
    if(len % k != 0){
        return false;}
    if(len / k != m){
        return false;}
    for(int i = l; i <= r; i++){
        if(arr[i] != arr[(i - l) % m + l]){
            return false;}} 
    return true;}
```

总结：
====

其实题目很简单，只是我一直在想优化的解法，反而忽略了暴力
