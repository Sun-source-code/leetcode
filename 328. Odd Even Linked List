# leetcode

题目描述（中等）
============

给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。
请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。

请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(nodes)，nodes 为节点总数。

示例 1:

输入: 1->2->3->4->5->NULL
输出: 1->3->5->2->4->NULL

解法一：分离节点后合并
==================

```java
public ListNode oddEvenList(ListNode head) {
    if(head == null) return head;
    ListNode even = head.next;
    ListNode slow = head,fast = even;
    while(fast != null && fast.next != null){
        slow.next = fast.next;
        slow = slow.next;
        fast.next = slow.next;
        fast = fast.next;}
    slow.next = even;
    return head;}
```

总结：
====

这里需要注意是节点编号的奇偶性，与节点本身的值没有关系，所以只要定义两个变量，分别指向下一个节点和前一个节点就可以了。
