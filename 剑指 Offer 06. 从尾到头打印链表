# leetcode

题目描述（简单）
============

输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。

示例 1：

输入：head = [1,3,2]
输出：[2,3,1]

解法一：栈
=========

```java
class Solution {
    public int[] reversePrint(ListNode head) {
        Stack<ListNode> stack = new Stack<>();
        ListNode temp = head;
        while(temp != null){
            stack.push(temp);
            temp = temp.next;}
        int size = stack.size();
        int [] ans = new int[size];
        for(int i = 0;i < size;i++){
            ans[i] = stack.pop().val;}
        return ans;}}
```

解法二：倒叙填充数组
=================

```java
class Solution {
    public int[] reversePrint(ListNode head) {
        ListNode temp = head;
        int count = 0;
        while(temp != null){
            count++;
            temp = temp.next;}
        int [] ans = new int[count];
        for(int i = 0;i < count;i++){
            ans[count - i - 1] = head.val;
            head = head.next;}
        return ans;}}
```

总结：
====

使用栈后进先出的特点进行存储，但是总的来说还是方法二时间快一点。
