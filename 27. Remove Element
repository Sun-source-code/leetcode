# leetcode

题目描述（简单）
============

给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。
不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。
元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。

示例 :
给定 nums = [3,2,2,3], val = 3,
函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。
你不需要考虑数组中超出新长度后面的元素。

解法一：双指针
===========

这里需要注意的是原地两个字，当元素的值与val相同时，需要跳过该元素

```java
public int removeElement(int[] nums, int val) {
    int index = 0;
    for(int i = 0;i < nums.elngth;i++){
        if(nums[i] != val){
            nums[index++] = nums[i];}}
    return index;}
```

当元素数目很少时

```java
public int removeElement(int[] nums, int val) {
    int index = 0;
    int n = nums.length;
    while(index < n){
        if(nums[index] == val){
            nums[i] = nums[n-1];
            n--;}
        else{
            index++;}}
    return index;}
```

总结：
====

这里比较不好考虑的是原地，其实也不难，跳过符合条件的元素即可。
