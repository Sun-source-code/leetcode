# leetcode

题目描述（简单）
=============

判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。
示例：输入: 121，输出: true
输入: -121，输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。

解法一：数字反转
=============

直接套用第七题的方法，加上一个判断即可

```java
public int reverse(int x){
  int ans = 0;
  while(x != 0){
    int pop = x % 10;
    x /= 10;
    if(ans > Integer.MAX_VALUE){
      return 0;}
    if(ans < Integer.MIN_VALUE){
      return 0;}
    ans = ans * 10 + pop;}
  return ans;}
public boolean isPalindrome(int x){
  if(x < 0) return false;
  int ans = reverse(x);
  return ans == x;}
```

解法二：反转一半数字
=================

我们只需要反转一半的数字，与另外一半比较即可，注意数字长度的奇偶性。

```java
public boolean isPalindrome(int x) {
  if (x < 0 || (x % 10 == 0 && x != 0)) {
    return false;}
  int ans = 0;
  while(x > ans){
    ans = ans * 10 + x % 10;
    x /= 10;}
  return x == ans || x == ans / 10;}
```

总结：
====

根据第七题很容易想到方法一，反转一半数字中x > ans用的很好。
