# leetcode

题目描述（中等）
============

给定一个 n × n 的二维矩阵表示一个图像。

将图像顺时针旋转 90 度。

说明：

你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。

示例 :
给定 matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],

原地旋转输入矩阵，使其变为:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]

解法一：转置+翻转
==============

先沿着对角线交换，然后沿着中轴线交换

```java
public void rotate(int [][] matrix){
    int n = matrix.length;
    for(int i = 0;i < n;i++){
        for(int j = i;j < n;j++){
            int temp = matrix[j][i];
            matrix[j][i] = matrix[i][j];
            matrix[i][j] = temp;}}
    for(int i = 0;i < n;i++){
        for(int j = 0;j < n / 2;j++){
            int temp = matrix[i][j];
            matrix[i][j] = matrix[i][n-j-1];
            matrix[i][n-j-1] = temp;}}}
```

解法二：旋转四个矩形
================

```java
public void rotate(int[][] matrix) {
    int n = matrix.length;
    for (int i = 0; i < n / 2 + n % 2; i++) {
        for (int j = 0; j < n / 2; j++) {
            int[] tmp = new int[4];
            int row = i;
            int col = j;
            for (int k = 0; k < 4; k++) {
                tmp[k] = matrix[row][col];
                int x = row;
                row = col;
                col = n - 1 - x;}
            for (int k = 0; k < 4; k++) {
                matrix[row][col] = tmp[(k + 3) % 4];
                int x = row;
                row = col;
                col = n - 1 - x;}}}}
```

总结：
====

这题就是找规律，找到每个位置的变化。
