# leetcode

题目描述（简单）
============

输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。

例如，一个链表有 6 个节点，从头节点开始，它们的值依次是 1、2、3、4、5、6。这个链表的倒数第 3 个节点是值为 4 的节点。

示例：
给定一个链表: 1->2->3->4->5, 和 k = 2.
返回链表 4->5.

解法一：快慢指针
=============

快指针先走k步，之后快慢指针同时走，直到快指针走到末尾，此时慢指针所指就是倒数第k个节点。

```java
class Solution {
    public ListNode getKthFromEnd(ListNode head, int k) {
        ListNode yummy = new ListNode(0);
        yummy.next = head;
        ListNode slow = yummy,fast = yummy;
        for(int i = 0;i < k;i++){
            fast = fast.next;}
        while(fast != null){
            fast = fast.next;
            slow = slow.next;}
        return slow;}}
```

解法二：栈
=========

```java
class Solution {
    public ListNode getKthFromEnd(ListNode head, int k) {
        Deque<ListNode> stack = new LinkedList<>();
        ListNode node = head;
        while(node != null){
            stack.push(node);
            node = node.next;}
        ListNode ans = new ListNode(0);
        for(int i = 0;i < k;i++){
            ans = stack.poll();}
        return ans;}}
```

总结：
====

快慢指针是这一类题最常用的方法，需要灵活运用。
