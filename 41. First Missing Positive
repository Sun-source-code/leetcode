# leetcode

题目描述（困难）
============

给你一个未排序的整数数组，请你找出其中没有出现的最小的正整数。

示例 1:
输入: [1,2,0]
输出: 3

示例 2:
输入: [3,4,-1,1]
输出: 2

解法一：枚举正整数
===============

```java
public int firstMissingPositive(int[] nums) {
    int n = nums.length;
    for(int i = 0;i < n;i++){
        if(nums[i] <= 0) nums[i] = n+1;}
    for(int i = 0;i < n;i++){
        int num = nums[i];
        if(num <= n) nums[num-1] = -Math.abs(nums[num-1]);}
    for(int i = 0;i < n;i++){
        if(nums[i] > 0) return i+1;}
    return n+1;}
```

解法二：置换
==========

```java
public int firstMissingPositive(int[] nums) {
    int n = nums.length;
    for (int i = 0; i < n; ++i) {
        while (nums[i] > 0 && nums[i] <= n && nums[nums[i] - 1] != nums[i]) {
            int temp = nums[nums[i] - 1];
            nums[nums[i] - 1] = nums[i];
            nums[i] = temp;}}
    for (int i = 0; i < n; ++i) {
        if (nums[i] != i + 1) {
            return i + 1;}}
    return n + 1;}
```

总结：
====

刚开始还觉得这个题目简单，后来发现我错了，仅仅第一种解法我就没想到，思路厉害
