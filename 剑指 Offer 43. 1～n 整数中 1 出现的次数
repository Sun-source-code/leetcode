# leetcode

题目描述（困难）
============

输入一个整数 n ，求1～n这n个整数的十进制表示中1出现的次数。

例如，输入12，1～12这些整数中包含1 的数字有1、10、11和12，1一共出现了5次。

示例 1：

输入：n = 12
输出：5

解法一：动态规划
==============

令cur为当前数字，high为当前数字的高位，low为当前数字的地位：
当cur = 0时，1出现的次数为high * digit
当cur = 1时，1出现的次数为high * digit + low + 1
当cur = 2,3...时，1出现的次数为(high + 1) * digit

```java
class Solution {
    public int countDigitOne(int n) {
        int digit = 1,high = n / 10,cur = n % 10,low = 0,res = 0;
        while(high != 0 || cur != 0){
            if(cur == 0) res += high * digit;
            else if(cur == 1) res += high * digit + low + 1;
            else res += (high + 1) * digit;
            low += cur * digit;
            cur = high % 10;
            high /= 10;
            digit *= 10;}
        return res;}}
```

总结：
====

这题很明显不是使用暴力的方法，但是又找不到其中的联系，动态规划对每一位数字当前的状态进行分析，非常巧妙。
