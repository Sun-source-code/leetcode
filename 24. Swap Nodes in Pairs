# leetcode

题目描述（中等）
============

给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。
你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。

示例:
给定 1->2->3->4, 你应该返回 2->1->4->3.

解法一：递归
==========

```java
public ListNode swapPairs(ListNode head) {
    if(head == null || head.next == null){
        return head;}
    ListNode first = head;
    ListNode second = head.next;
    first = swapPairs(second.next);
    second.next = first;
    return second;}
```

解法二：迭代
==========

```java
public ListNode swapPairs(ListNode head) {
    ListNode dummy = new ListNode(-1);
    dummy.next = head;
    ListNode prev = dummy;
    while(head != null && head.next != null){
        ListNode first = head;
        ListNode second = head.next;
        prev.next = second;
        first.next = second.next;
        second.next = first;
        prev = first;
        head = first.next;}
    return dummy.next;}
```

总结：
====

刚开始我还没理解交换两个节点而不能交换两个节点的值，后来发现也就是更新当前节点的指向，两个方法都是常规思路。
