# leetcode

题目描述（简单）
============

将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 

示例：
输入：1->2->4, 1->3->4
输出：1->1->2->3->4->4

解法一：递归
==========

```java
public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
    if(l1 == null){
        return l2;}
    else if(l2 == null){
        return l1;}
    else if(l1.val < l2.val){
        l1.next = mergeTwoLsits(l1.next,l2);
        return l1;}
    else if(l1.next > l2.next){
        l2.next = mergeTwoLists(l1,l2.next);}}
```

解法二：迭代
==========

```java
public ListNode mergeTwoLists(ListNode l1,ListNode l2){
    ListNode preHead = new ListNode(-1);
    ListNode prev = preHead;
    while(l1 != null || l2 != null){
        if(l1.val < l2,val){
            prev.next = l1;
            l1 = l1.next;}
        else{
            prev.next = l2;
            l2 = l2.next;}
        prev = prev.next;}
    prev.next = l1 == null ? l2 : l1;
    return preHead.next;}
```

总结：
====

与第19题一样，链表的遍历问题。
