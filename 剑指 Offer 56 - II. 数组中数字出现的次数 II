# leetcode

题目描述（中等）
============

在一个数组 nums 中除一个数字只出现一次之外，其他数字都出现了三次。请找出那个只出现一次的数字。

示例 1：

输入：nums = [3,4,3,3]
输出：4

解法一：有限状态自动机
===================

异或操作：x ^ 0 = x,x ^ 1 = ~x
与操作：x & 0 = 0,x & 1 = x

每个元素对3除余，只能得到三种结果，0->1->2，对应两位00->01->10->00
求第一位：
if two = 0:if n = 0 one = 1;if n = 1 one = 0
if two = 1:one = 0
综合：one = one ^ n & ~two
求第二位：
if one = 0:if n = 0 two = 1;if n = 1 two = 0
if one = 1:two = 0
综合：two = two ^ n & ~one

```java
class Solution {
    public int singleNumber(int[] nums) {
        int one = 0,two = 0;
        for(int num : nums){
            one = one ^ num & ~two;
            two = two ^ num & ~one;}
        return one;}}
```

解法二：遍历计算
==============

```java
class Solution {
    public int singleNumber(int[] nums) {
        int [] count = new int[32];
        for(int num : nums){
            for(int i = 0;i < 32;i++){
                count[i] += num & 1;
                num >>>= 1;}}
        int res = 0,m = 3;
        for(int i = 0;i < 32;i++){
            res <<= 1;
            res |= counts[31 - i] % m;}
        return res;}}
```

总结：
====

这方法也太厉害了吧，方法一就不用说了，有限状态机我都想不到，方法二还能想到一点思路，但是各种位运算也很费工夫，需要多练位运算。
