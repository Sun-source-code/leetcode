# leetcode

题目描述（简单）
=============

有两种特殊字符。第一种字符可以用一比特0来表示。第二种字符可以用两比特(10 或 11)来表示。
现给一个由若干比特组成的字符串。问最后一个字符是否必定为一个一比特字符。给定的字符串总是由0结束。

示例:
输入: bits = [1, 0, 0]
输出: True
解释: 
唯一的编码方式是一个两比特字符和一个一比特字符。所以最后一个字符是一比特字符。

解法一：线性扫描
=============

从左向右扫描，如果扫描到1，那么i+2，如果扫描到0，那么i+1，如果最终落在了bits.length-1的位置，就返回true

```java
public boolean isOneBitCharacter(int[] bits) {
    int n = bits.length;
    int i = 0;
    while(i < n-1){
        i += bits[i] + 1;}
    return i == n-1;}
```

解法二：贪心算法
=============

三种字符是0，10，11，那么最后一位是否为一比特字符，只和他左侧出现的连续的 1 的个数（即它与倒数第二个 0 出现的位置之间的 1 的个数，如果
bits 数组中只有 1 个 0，那么就是整个数组的长度减一）有关

```java
public boolean isOneBitCharacter(int[] bits) {
    int i = bits.length - 2;
    while (i >= 0 && bits[i] > 0) i--;
    return (bits.length - i) % 2 == 0;}
```

总结：
====

找规律题目，与具体过程无关，只要计算1和0的个数。
