# leetcode

题目描述（中等）
============

给定一组不含重复元素的整数数组 nums，返回该数组所有可能的子集（幂集）。

说明：解集不能包含重复的子集。

示例:

输入: nums = [1,2,3]
输出:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

解法一：迭代法实现子集枚举
======================

```java
List<Integer> t = new ArrayList<Integer>();
List<List<Integer>> ans = new ArrayList<List<Integer>>();

public List<List<Integer>> subsets(int[] nums) {
    int n = nums.length;
    for (int mask = 0; mask < (1 << n); ++mask) {
        t.clear();
        for (int i = 0; i < n; ++i) {
            if ((mask & (1 << i)) != 0) {
                t.add(nums[i]);}}
        ans.add(new ArrayList<Integer>(t));}
    return ans;}
```

解法二：递归法实现子集枚举
======================

```java
List<Integer> tmp = new ArrayList<>();
List<List<Integer>> ans = new ArrayList<>();

public List<List<Integer>> subsets(int[] nums) {
    dfs(0,nums);
    return ans;}
public void dfs(int cur,int [] nums){
    if(cur == nums.length){
        ans.add(new ArrayList<>(tmp));
        return;}
    tmp.add(nums[cur]);
    dfs(cur+1,nums);
    tmp.remove(tmp.size()-1);
    dfs(cur+1,nums);}
```

总结：
====

实际上就是实现枚举，1代表子集中存在，0表示子集中不存在，使用递归和迭代列举出所有可能
