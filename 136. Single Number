# leetcode

题目描述（简单）
=============

给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

说明：

你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

示例 1:
输入: [2,2,1]
输出: 1

解法一：位运算
============

利用异或运算，a ^ 0 = a,a ^ a = 0

```java
public int singleNumber(int[] nums) {
    int single = 0;
    for(int num : nums){
        single ^= num;}
    return single;}
```

总结：
====

其实可以使用哈希表来存储，不过这样就大大增加了时间复杂度，使用位运算则只需要一次遍历就好，很棒的逻辑
