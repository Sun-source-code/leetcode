# leetcode

题目描述（中等）
============

给定一个数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。

candidates 中的每个数字在每个组合中只能使用一次。

说明：
所有数字（包括目标数）都是正整数。
解集不能包含重复的组合。 
示例 1:

输入: candidates = [10,1,2,7,6,1,5], target = 8,
所求解集为:
[
  [1, 7],
  [1, 2, 5],
  [2, 6],
  [1, 1, 6]
]

解法一：回溯+剪枝
==============

```java
public List<List<Integer>> combinationSum2(int[] candidates, int target) {
    int len = candidates.length;
    List<List<Integer>> ans = new ArrayList<>();
    if(len == 0) return ans;
    Arrays.sort(candidates);
    Deque<Integer> queue = new ArrayDeque<>();
    dfs(candidates,len,0,target,path,ans);
    return ans;}
public  void dfs(int [] candidates,int len,int begin,int residue,Deque<Integer> path,List<List<Integer>> ans){
    if(residue == 0){
        ans.add(new ArrayList<>(path));
        return;}
    for(int i = begin;i < len;i++){
        if(residue - candidates[i] < 0) break;
        if(i > begin && candidates[i] == candidates[i-1]){
            continue;}
        path.addLast(candidates[i]);
        dfs(candidates,len,i+1,residue - candidates[i],path,ans);
        path.removeLast();}}
```

总结：
====

题目和第39题相同，只需要加上一个判断条件。
