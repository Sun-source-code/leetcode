# leetcode

题目描述（中等）
============

请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。
例如，字符串"+100"、"5e2"、"-123"、"3.1416"、"-1E-16"、"0123"都表示数值，但"12e"、"1a3.14"、"1.2.3"、"+-5"及"12e+5.4"都不是。

解法一：有限状态自动机
==================

定义初始状态：
0、开始的空格
1、幂符号前的正负号
2、小数点前的数字
3、小数点、小数点后的数字
4、当小数点前为空格时，小数点、小数点后的数字
5、幂符号
6、幂符号后的正负号
7、幂符号后的数字
8、结尾的空格
其中符合条件的有2，3，7，8

当 c 为正负号时，执行 t = 's' ;
当 c 为数字时，执行 t = 'd' ;
当 c 为 e , E 时，执行 t = 'e' ;
当 c 为 . , 空格 时，执行 t = c （即用字符本身表示字符类型）;
否则，执行 t = '?' ，代表为不属于判断范围的非法字符，后续直接返回 false
最后如果t的类型不在map中，返回false

```java
class Solution {
    public boolean isNumber(String s) {
        Map [] state = new HashMap<>(){{put(' ',0);put('s',1);put('d',2);put('.',4);}}, //0
                       new HashMap<>(){{put('d',2);put('.',4);}}, //1
                       new HashMap<>(){{put('d',2);put('.',3);put('e',5);put(' ',8);}}, //2
                       new HashMap<>(){{put('d',3);put('e',5);put(' ',8);}}, //3
                       new HashMap<>(){{put('d',3);}}, //4
                       new HashMap<>(){{put('s',6);put('d',7);}}, //5
                       new HashMap<>(){{put('d',7);}}, //6
                       new HashMap<>(){{put('d',7);put(' ',8);}}, //7
                       new HashMap<>(){{put(' ',8)}} }; //8
        int p = 0;
        char t;
        for(char c : s.toCharArray()){
            if(c >= '0' && c <= '9') t = 'd';
            else if(c == '+' || c == '-') t = 's';
            else if(c == 'e' || c == 'E') t = 'e';
            else if(c == '.' || c == ' ') t = c;
            else t = '?';
            if(!state[p].containsKey(t)) return false;
            p = (int)state[p].get(t);}
        return p == 2 || p == 3 || p == 7 || p == 8;}}
```

总结：
====

很麻烦的一道题，知识点倒是不复杂，只是将不同的状态罗列出来，字符对应到相应的状态，只是这九种状态的变化很复杂。
