# leetcode

题目描述（中等）
=============

有一块木板，长度为 n 个 单位 。一些蚂蚁在木板上移动，每只蚂蚁都以 每秒一个单位 的速度移动。
其中，一部分蚂蚁向 左 移动，其他蚂蚁向 右 移动。
当两只向 不同 方向移动的蚂蚁在某个点相遇时，它们会同时改变移动方向并继续移动。假设更改方向不会花费任何额外时间。
而当蚂蚁在某一时刻 t 到达木板的一端时，它立即从木板上掉下来。

给你一个整数 n 和两个整数数组 left 以及 right 。
两个数组分别标识向左或者向右移动的蚂蚁在 t = 0 时的位置。请你返回最后一只蚂蚁从木板上掉下来的时刻。

示例：输入：n = 4, left = [4,3], right = [0,1]
输出：4
解释：如上图所示：
-下标 0 处的蚂蚁命名为 A 并向右移动。
-下标 1 处的蚂蚁命名为 B 并向右移动。
-下标 3 处的蚂蚁命名为 C 并向左移动。
-下标 4 处的蚂蚁命名为 D 并向左移动。
请注意，蚂蚁在木板上的最后时刻是 t = 4 秒，之后蚂蚁立即从木板上掉下来。（也就是说在 t = 4.0000000001 时，木板上没有蚂蚁）。

解法一
=====

这题其实是个脑筋急转弯，蚂蚁是否掉头其实并没有什么关系，直接求出最后到达边缘的时间即可。
注意需要分向左移动和向右移动两种情况

```java
public int getLastMoment(int n, int[] left, int[] right) {
  int max = -1;
  for(int i = 0; i < left.length;i++){
    max = Math.max(max,left[i]);}
  for(int i = 0; i < right.length;i++){
    max = Math.max(max,n-right[i]);}
      return max;}
```

总结：
====

纯粹的脑筋急转弯题目。
