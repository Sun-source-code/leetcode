# leetcode

题目描述（中等）
=============

给定一个正整数 n，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的正方形矩阵。
示例：输入: 3
输出:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]

解法一：模拟
==========

从左到右，从上到下，从右到左，从下到上依次顺序循环，当定义的数字个数达到n*n时结束，注意更新边界

```java
public int[][] generateMatrix(int n) {
  int [][] matrix = new int[n][n];
  int l = 0,r = n-1;
  int t = 0,b = n-1;
  int index = 1;
  int total = n * n;
  while(index <= total){
    for(int i = l;i <= r;i++) matrix[t][i] = index++;
    t++;
    for(int i = t;i <= b;i++) matrix[i][r] = index++;
    r--;
    for(int i = r;i >= l;i--) matrix[b][i] = index++;
    b--;
    for(int i = b;i >= t;i--) matrix[i][l] = index++;
    l++;}
  return matrix;}
```

总结：
====

和第54题是一样的，不同的是更新方式，54题更新一维数组下标，这题更新更新数组的值，找到规律即可。
